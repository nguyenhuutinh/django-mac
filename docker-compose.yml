version: '3.3'

services:
  db:
    image: "postgres:alpine"
    environment:
      - POSTGRES_USER=macos
      - POSTGRES_PASSWORD=123456
      - POSTGRES_DB=macos

    ports:
      - "5432:5432"
    volumes:
      - dbdata:/var/lib/postgresql/data:delegated

  broker:
    image: "redis:alpine"

  # result:
  #   image: "redis:alpine"

  # frontend:
  #   build:
  #     dockerfile: frontend/Dockerfile
  #     context: .
  #   volumes:
  #     - .:/app/
  #     - /app/node_modules
  #   ports:
  #     - "3000:3000"
  # tesseract:
  #   image: ricktorzynski/ocr-tesseract-docker
  #   ports:
  #     - "5000:5000"
  backend:
    build:
      dockerfile: backend/Dockerfile
      context: .
    ports:
      - "8000:8000"
    volumes:
      - ./:/home/user/app/
    env_file: backend/.env
    depends_on:
      - db
      - broker
      # - tesseract
      # - result
      # - frontend

  
  # flower:
  #   image: mher/flower
  #   container_name: flower # Docker conainer name

  #   ports:
  #     - "5555:5555"
  #   command: celery flower # This will execute flower.
  #   environment:
  #     - CELERY_BROKER_URL=redis://broker:6379
  #     - FLOWER_PORT=5555
  #     - FLOWER_BASIC_AUTH=tccl:tccl2024  # Add this line
  #   depends_on:
  #     - broker

  celery:
    build:
      dockerfile: backend/Dockerfile
      context: .
    command: >
      bash -c "celery -A telegrambot worker -B -l info"
    
    volumes:
      - ./:/home/user/app/
    env_file: backend/.env
    depends_on:
      - db
      - broker
      # - result
  # mailhog: # service for faking a SMTP server
  #   image: mailhog/mailhog
  #   ports:
  #     - '1025:1025' # smtp server
  #     - '8025:8025' # web ui
  celery-beat:
    build:
      dockerfile: backend/Dockerfile
      context: .
    command: celery -A telegrambot beat -l info
    volumes:
      - ./:/home/user/app/
    env_file: backend/.env
    depends_on:
      - db
      - broker
volumes:
  dbdata:
    external:
      name: telegrambot_dbdata
